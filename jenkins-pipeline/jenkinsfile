pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
metadata:
    name: agent
    namespace: jenkins-ns
spec:
    serviceAccountName: jenkins-admin
    containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:debug
      command:
      - cat
      tty: true
      volumeMounts:
      - name: docker-secret
        mountPath: /kaniko/.docker/
  volumes:
    - name: docker-secret
      secret:
        secretName: docker-secret
'''
        }
    }

    stages {

        stage('Build-Docker-Image') {
            steps {
                container('kaniko') {
                    script {
                        sh '/kaniko/executor --dockerfile quiz-app-frontend/Dockerfile  --context quiz-app-frontend --destination ibrahimmohamedzaghloul/pwc_quizapp:${BUILD_NUMBER}'
                    }
                }
            }
        }
    }
}
//         stage("change image version") {
//             steps {
//                 script {
//                     echo "changing image version .."
//                     sh "sed -i \"s|image:.*|image: ${REPO_NAME_FRONTEND}/${IMAGE_VERSION}|g\" ./app-manifest/frontend.yaml"
//                 }
//             }
//         }

//         stage('Configure kubectl for EKS') {
//             steps {
//                 script {
//                     sh "aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${AWS_REGION}"
//                 }
//             }

//         stage('Deploy app to eks cluster') {
//             steps {
//                 echo 'Deploying to eks cluster ... '
//                 withCredentials([file(credentialsId:'kube-config', variable:'KUBECONFIG')]){
//                     script {
//                         sh "kubectl create namespace ${APP_NAMESPACE} || true"
//                         sh "kubectl apply -f ./app-manifest --namespace ${APP_NAMESPACE}"
//                     }
//                 }
//             }
//         }
//     }
// }